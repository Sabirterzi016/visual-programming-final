<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>